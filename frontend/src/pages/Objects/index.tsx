import { useEffect, useMemo, useState } from "react";
import { useLocation, useNavigate, useParams } from "react-router-dom";
import styles from "./Objects.module.css";
import FiltersBar, { type Filters } from "./Filters";

type Preset = "duty" | "my" | "drafts";

/** –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤–µ—Ä—Ö–Ω–µ–≥–æ –±–ª–æ–∫–∞ */
type Category = "" | "sale" | "rent" | "newbuild" | "land";

type Property = {
  id: number | string;
  title: string;
  address?: string;
  price?: number;
  cover_url?: string | null;
  author?: string;
};

type ListResponse = {
  results: Property[];
  next?: string | null;
};

const TITLE: Record<Preset, string> = {
  duty: "–î–µ–∂—É—Ä–∫–∞",
  my: "–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã",
  drafts: "–ë–µ–∑ —Ä–µ–∫–ª–∞–º—ã",
};

function mergeById(prev: Property[], next: Property[]) {
  const seen = new Set(prev.map((i) => String(i.id)));
  const merged = [...prev];
  for (const it of next) {
    const id = String(it.id);
    if (!seen.has(id)) {
      seen.add(id);
      merged.push(it);
    }
  }
  return merged;
}

export default function ObjectsPage() {
  const { preset: raw } = useParams();
  const nav = useNavigate();
  const { search } = useLocation();

  // –Ω–æ—Ä–º–∞–ª–∏–∑—É–µ–º preset
  const preset: Preset = useMemo(() => {
    return raw === "my" || raw === "drafts" ? raw : "duty";
  }, [raw]);

  // –≤—ã–±—Ä–∞–Ω–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è –∏–∑ query (?cat=...)
  const initialCat: Category = useMemo(() => {
    const sp = new URLSearchParams(search);
    const c = sp.get("cat") as Category | null;
    return c ?? "";
  }, [search]);

  const [cat, setCat] = useState<Category>(initialCat);

  // —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ª–µ–Ω—Ç—ã
  const [items, setItems] = useState<Property[]>([]);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);
  const [page, setPage] = useState(1);
  const [hasMore, setHasMore] = useState(true);

  // —Ñ–∏–ª—å—Ç—Ä—ã –∏–∑ –ø–∞–Ω–µ–ª–∏
  const [filters, setFilters] = useState<Filters | null>(null);

  // –ø—Ä–∏ —Å–º–µ–Ω–µ —Ä–µ–∂–∏–º–∞/—Ñ–∏–ª—å—Ç—Ä–æ–≤/–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ‚Äî —Å–±—Ä–æ—Å –ª–µ–Ω—Ç—ã –∏ –∑–∞–≥—Ä—É–∑–∫–∞ —Å 1 —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  useEffect(() => {
    setItems([]);
    setPage(1);
    setHasMore(true);
    setError(null);
  }, [preset, filters, cat]);

  // –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
  useEffect(() => {
    void loadPage(page);
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [preset, page, filters, cat]);

  async function loadPage(p: number) {
    if (!hasMore || loading) return;
    try {
      setLoading(true);
      setError(null);

      const base = import.meta.env.VITE_API_URL.replace(/\/+$/, "");
      const qs = new URLSearchParams({ page: String(p) });

      // —Ñ–∏–∫—Å–∏—Ä—É–µ–º —Å—Ç–∞—Ç—É—Å –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –ø–æ –ø—Ä–µ—Å–µ—Ç—É
      if (preset === "duty") qs.set("published", "1");
      if (preset === "my") qs.set("mine", "1");
      if (preset === "drafts") qs.set("published", "0");

      // –∫–∞—Ç–µ–≥–æ—Ä–∏—è –∏–∑ –≤–µ—Ä—Ö–Ω–µ–≥–æ –±–ª–æ–∫–∞
      if (cat === "sale" || cat === "rent") qs.set("deal_type", cat);
      if (cat === "newbuild") qs.set("category", "newbuild");
      if (cat === "land") qs.set("category", "land");

      // –ø—Ä–æ—á–∏–µ —Ñ–∏–ª—å—Ç—Ä—ã
      if (filters) {
        if (filters.q) qs.set("q", filters.q);
        if (filters.mine && preset !== "my") qs.set("mine", "1");
        if (!(preset === "duty" || preset === "drafts")) {
          if (filters.published) qs.set("published", filters.published);
        }
        if (filters.price_min) qs.set("price_min", filters.price_min);
        if (filters.price_max) qs.set("price_max", filters.price_max);
        if (filters.rooms) qs.set("rooms", filters.rooms);
      }

      const res = await fetch(`${base}/properties/?${qs.toString()}`, {
        credentials: "include",
        headers: {
          "Content-Type": "application/json",
          Authorization: `Bearer ${localStorage.getItem("access") || ""}`,
        },
      });

      if (!res.ok) {
        const text = await res.text();
        throw new Error(text || "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏");
      }

      const data: ListResponse = await res.json();
      setItems((prev) => mergeById(prev, data.results || []));
      setHasMore(Boolean(data.next));
    } catch (e: any) {
      setError(typeof e?.message === "string" ? e.message : "–û—à–∏–±–∫–∞");
    } finally {
      setLoading(false);
    }
  }

  const onAddObject = () => nav("/properties/new");

  // –∫–ª–∏–∫ –ø–æ ¬´–ö—É–ø–∏—Ç—å/–ê—Ä–µ–Ω–¥–∞/–ù–æ–≤–æ—Å—Ç—Ä–æ–π–∫–∏/–£—á–∞—Å—Ç–∫–∏¬ª
  function selectCat(next: Category) {
    setCat(next);
    const sp = new URLSearchParams(window.location.search);
    if (next) sp.set("cat", next);
    else sp.delete("cat");
    nav({ search: `?${sp.toString()}` }, { replace: true });
  }

  return (
    <div className={styles.container}>
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ + –¥–µ–π—Å—Ç–≤–∏—è */}
      <div className={styles.headerRow}>
        <h1 className={styles.title}>{TITLE[preset]}</h1>
        <div className={styles.headerActions}>
          {preset !== "drafts" && (
            <button className={styles.primary} onClick={onAddObject}>
              –î–æ–±–∞–≤–∏—Ç—å –æ–±—ä–µ–∫—Ç
            </button>
          )}
        </div>
      </div>

      {/* –ö–∞—Ä—Ç–æ—á–∫–∞: –ø–æ–∏—Å–∫ + –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã–µ) */}
      <div className={styles.catalogCard}>
        <div className={styles.search}>
          <span className={styles.searchIcon} aria-hidden>
            <svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2">
              <circle cx="11" cy="11" r="7" />
              <line x1="21" y1="21" x2="16.65" y2="16.65" />
            </svg>
          </span>
          <input className={styles.searchInput} placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä, –∫—É–ø–∏—Ç—å –¥–æ–º" />
        </div>

        <ul className={styles.cats}>
          <li
            className={`${styles.catRow} ${cat === "sale" ? styles.catRowActive : ""}`}
            onClick={() => selectCat("sale")}
          >
            <span className={styles.catLeft}>
              <span className={styles.catIcon}>üè†</span>
              <span className={styles.catLink}>–ö—É–ø–∏—Ç—å</span>
            </span>
            <span className={styles.catCount}>1213+</span>
          </li>

          <li
            className={`${styles.catRow} ${cat === "rent" ? styles.catRowActive : ""}`}
            onClick={() => selectCat("rent")}
          >
            <span className={styles.catLeft}>
              <span className={styles.catIcon}>üîë</span>
              <span className={styles.catLink}>–ê—Ä–µ–Ω–¥–∞</span>
            </span>
            <span className={styles.catCount}>1213+</span>
          </li>

          <li
            className={`${styles.catRow} ${cat === "newbuild" ? styles.catRowActive : ""}`}
            onClick={() => selectCat("newbuild")}
          >
            <span className={styles.catLeft}>
              <span className={styles.catIcon}>üèóÔ∏è</span>
              <span className={styles.catLink}>–ù–æ–≤–æ—Å—Ç—Ä–æ–π–∫–∏</span>
            </span>
            <span className={styles.catCount}>1213+</span>
          </li>

          <li
            className={`${styles.catRow} ${cat === "land" ? styles.catRowActive : ""}`}
            onClick={() => selectCat("land")}
          >
            <span className={styles.catLeft}>
              <span className={styles.catIcon}>üèûÔ∏è</span>
              <span className={styles.catLink}>–£—á–∞—Å—Ç–∫–∏</span>
            </span>
            <span className={styles.catCount}>1213+</span>
          </li>
        </ul>
      </div>

      {/* –®–∞–ø–∫–∞ ¬´–ù–∞—à–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è / –≥–æ—Ä–æ–¥¬ª */}
      <div className={styles.sectionHead}>
        <h3 className={styles.sectionTitle2}>–ù–∞—à–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è</h3>
        <a className={styles.sectionCity} href="#">–ë–∏—à–∫–µ–∫</a>
      </div>

      {/* –ü–∞–Ω–µ–ª—å —Ñ–∏–ª—å—Ç—Ä–æ–≤ (–æ—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –µ—Å—Ç—å) */}
      <FiltersBar preset={preset} onApply={setFilters} />

      {/* –ü—É—Å—Ç–æ/–æ—à–∏–±–∫–∞ */}
      {items.length === 0 && !loading && !error && (
        <div className={styles.empty}>–ü–æ–∫–∞ –Ω–∏—á–µ–≥–æ –Ω–µ—Ç</div>
      )}
      {error && <div className={styles.error}>{error}</div>}

      {/* –°–µ—Ç–∫–∞ –∫–∞—Ä—Ç–æ—á–µ–∫ */}
      <div className={styles.grid}>
        {items.map((it) => (
          <article key={it.id} className={styles.card}>
            <div className={styles.thumb}>
              {it.cover_url ? <img src={it.cover_url} alt="" /> : <div className={styles.thumbStub} />}
            </div>
            <div className={styles.cardBody}>
              <div className={styles.cardTitle}>{it.title || "–û–±—ä–µ–∫—Ç"}</div>
              <div className={styles.cardMeta}>
                {it.address && <span>{it.address}</span>}
                {it.price != null && <span>{Intl.NumberFormat("ru-RU").format(it.price)} ‚ÇΩ</span>}
              </div>
            </div>
          </article>
        ))}
      </div>

      {/* –ü–∞–≥–∏–Ω–∞—Ü–∏—è */}
      <div className={styles.pager}>
        <button
          className={hasMore && !loading ? styles.secondary : styles.disabled}
          disabled={!hasMore || loading}
          onClick={() => setPage((p) => p + 1)}
        >
          {loading ? (
            <span className={styles.btnContent}>
              <span className={styles.spinner} aria-hidden />
              –ó–∞–≥—Ä—É–∂–∞–µ–º‚Ä¶
            </span>
          ) : hasMore ? (
            "–ü–æ–∫–∞–∑–∞—Ç—å –µ—â—ë"
          ) : (
            "–ë–æ–ª—å—à–µ –Ω–µ—Ç"
          )}
        </button>
      </div>
    </div>
  );
}
